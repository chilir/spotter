name: Pull request
on:
  pull_request:

permissions:
  contents: read
  pull-requests: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  python-lint-format-test:
    runs-on: ubuntu-latest
    env:
      SPOTTER_DIR: ./apps/spotter
    steps:
      - uses: actions/checkout@v4

      - name: Install Nix
        uses: nixbuild/nix-quick-install-action@v30

      - name: Check Nix flake
        uses: DeterminateSystems/flake-checker-action@v9
        with:
          fail-mode: true

      - name: Set up Python environment
        run: nix develop --command bash -c 'uv sync --all-extras'

      - name: Lint Python code with ruff
        run: |
          nix develop --command bash -c '
            ruff --version
            ruff --config ${SPOTTER_DIR}/pyproject.toml check --show-fixes --target-version py312 ${SPOTTER_DIR}
          '

      - name: Format Python code with ruff
        run: |
          nix develop --command bash -c '
            ruff --version
            ruff --config ${SPOTTER_DIR}/pyproject.toml format --check --diff --target-version py312 ${SPOTTER_DIR}
          '

      - name: Run Python tests with pytest
        run: |
          nix develop --command bash -c '
            uv run pytest --version
            uv run pytest -v --color=yes ${SPOTTER_DIR}
          '

  go-lint:
    runs-on: ubuntu-latest
    env:
      SPOTTER_MANAGER_DIR: ./apps/spotter-manager
    steps:
      - uses: actions/checkout@v4

      - name: Lint Go code with golangci-lint
        uses: golangci/golangci-lint-action@v7
        with:
          only-new-issues: true
          working-directory: ${{ env.SPOTTER_MANAGER_DIR }}
          skip-cache: true
          skip-save-cache: true
          args: "--fast-only"

  go-format-test:
    needs: go-lint
    runs-on: ubuntu-latest
    env:
      SPOTTER_MANAGER_DIR: ./apps/spotter-manager
    steps:
      - uses: actions/checkout@v4

      - name: Install Nix
        uses: nixbuild/nix-quick-install-action@v30

      - name: Check Nix flake
        uses: DeterminateSystems/flake-checker-action@v9
        with:
          fail-mode: true

      - name: Set up Go environment
        run: nix develop --command bash -c 'go mod download'

      - name: Format Go code with goimports
        run: |
          nix develop --command bash -c '
            shopt -s globstar
            goimports -d -l -e ${SPOTTER_MANAGER_DIR}/**/*.go
          '

      - name: Run Go tests
        run: nix develop --command bash -c 'go test ${SPOTTER_MANAGER_DIR}/...'
